@mixin font-pri($name: "Montserrat") {
    font-family: $name, sans-serif;
}

@mixin font-second($name: "Montserrat") {
    font-family: $name, sans-serif;
}

@mixin font-third($name: "Montserrat") {
    font-family: $name, sans-serif;
}


@mixin max($value) {
    @media screen and (max-width: $value) {
        @content;
    }
}

@mixin min($value) {
    @media screen and (min-width: $value) {
        @content;
    }
}

@mixin min-max($min, $max) {
    @media (min-width: $min) and (max-width: $max) {
        @content;
    }
}

@mixin mid() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}


@mixin flex() {
    display: flex;
}

@mixin flex-wr() {
    display: flex;
    flex-wrap: wrap;
}

@mixin flex-st() {
    display: flex;
    align-items: stretch;
    flex-wrap: wrap;
}

@mixin mid-flex() {
    display: flex;
    align-items: center;
    justify-content: center;
}

@mixin flex-center {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
}

@mixin flex-icenter {
    display: flex;
    align-items: center;
}

@mixin flex-jcenter {
    display: flex;
    justify-content: center;
}

@mixin flex-jbetween {
    display: flex;
    justify-content: space-between;
}

@mixin flex-col {
    @include flex;
    flex-direction: column;
}

@mixin flex-list($m: 0 -1.6rem, $mb: -3.2rem) {
    @include flex-wr;
    margin: $m;
    margin-bottom: $mb;

    @include max($mobile) {
        margin: 0 -0.6rem;
        margin-bottom: -1.2rem;
    }
}

@mixin flex-item($p: 0 1.6rem, $mb: 3.2rem) {
    @include flex-wr;
    padding: $p;
    margin-bottom: $mb;

    @include max($mobile) {
        padding: 0 0.6rem;
        margin-bottom: 1.2rem;
    }
}

@mixin excerpt($font-size: $paragraph-font-size, $line-height: 1.4, $lines-to-show: 3, $excerpt-bg: transparent) {
    background: $excerpt-bg;
    display: -webkit-box;
    font-size: 1.4;
    line-height: $line-height;
    -webkit-line-clamp: $lines-to-show;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
}


@mixin imgPd($ver, $hori) {
    display: block;
    padding-top: calc((#{$ver} / #{$hori}) * 100%);
    position: relative;
    overflow: hidden;
}

@mixin imgCover {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@mixin imgContain {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 100%;
    height: 100%;
    object-fit: contain;
}

@mixin bgImage($position: center, $size: cover, $repeat: no-repeat) {
    background-repeat: $repeat;
    background-size: $size;
    background-position: $position;
}

@mixin box($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin lc($value: 2) {
    display: -webkit-box;
    text-overflow: ellipsis;
    -webkit-line-clamp: $value;
    -webkit-box-orient: vertical;
    overflow: hidden;
}

@mixin tranform($value) {
    transform: $value;
    -webkit-transform: $value;
    -moz-transform: $value;
    -ms-transform: $value;
    -o-transform: $value;
}

@mixin transition($time: 0.1s, $style: ease-in-out, $delay: 0s) {
    transition: $time $style;
    -webkit-transition: $time $style;
    -moz-transition: $time $style;
    -ms-transition: $time $style;
    -o-transition: $time $style;
    transition-delay: $delay;
    -webkit-transition-delay: $delay;
    -moz-transition-delay: $delay;
    -ms-transition-delay: $delay;
    -o-transition-delay: $delay;
}

@mixin transitionRe {
    transition: 0.3s ease-in-out;
    -webkit-transition: 0.3s ease-in-out;
    -moz-transition: 0.3s ease-in-out;
    -ms-transition: 0.3s ease-in-out;
    -o-transition: 0.3s ease-in-out;
}

@mixin hover($value: 1025px) {
    &:hover {
        @media screen and (min-width: $value) {
            @content;
        }
    }
}

@mixin sqr($value: 4rem) {
    width: $value;
    height: $value;
}

@mixin cir($value: 4rem) {
    width: $value;
    height: $value;
    border-radius: 100%;
}

@mixin default-background($repeat: no-repeat, $position: center, $size: cover) {
    background-repeat: $repeat;
    background-position: $position;
    background-size: $size;
}

// @mixin clear {
//     &::after {
//         content: "";
//         clear: both;
//         display: table;
//     }
// }

@mixin clear {
    *zoom: 1;

    &:after {
        display: block;
        content: "";
        clear: both;
    }
}

@mixin scroll-hidden {
    &::-webkit-scrollbar {
        display: none;
    }
}

@mixin full-fixed($l: 0, $t: 0, $r: 0, $b: 0) {
    position: fixed;
    left: $l;
    top: $t;
    right: $r;
    bottom: $b;
}

@mixin full($l: 0, $t: 0, $r: 0, $b: 0) {
    left: $l;
    top: $t;
    right: $r;
    bottom: $b;
}

@mixin full-size($size: 0) {
    left: $size;
    top: $size;
    right: $size;
    bottom: $size;
}

@mixin full-second {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@mixin hover-scale {
    transform: translate(-50%, -50%) scale(1.05);
}

@mixin posi-vertical {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

@mixin posi-horizontal {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
}

@mixin hidden($x: 0, $y: 0) {
    opacity: 0;
    visibility: hidden;
    transform: translate($x, $y);
    pointer-events: none;
}

@mixin show {
    opacity: 1;
    visibility: visible;
    pointer-events: visible;
    transform: translate(0, 0);
}

@mixin hover-zoom($scale: 1.05) {
    transform: scale($scale);
    -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
    -o-transform: scale($scale);
}

@mixin hover-zoom-abs($scale: 1.05) {
    transform: scale($scale);
    -webkit-transform: scale($scale);
    -moz-transform: scale($scale);
    -o-transform: scale($scale);
}

@mixin midle($p) {
    @if $p=="abs-ver" {
        position: absolute;
        top: 50%;
        transform: translateY(0, -50%);
        -webkit-transform: translateY(0, -50%);
        -moz-transform: translateY(0, -50%);
        -o-transform: translateY(0, -50%);
    }

    @else if $p=="abs-hori" {
        position: absolute;
        left: 50%;
        transform: translate(-50%, 0);
        -webkit-transform: translate(-50%, 0);
        -moz-transform: translate(-50%, 0);
        -o-transform: translate(-50%, 0);
    }

    @else if $p=="mid-flex" {
        display: -webkit-flex;
        display: -moz-flex;
        display: -ms-flex;
        display: -o-flex;
        display: flex;
        -ms-align-items: center;
        align-items: center;
        -webkit-align-items: center;
        justify-content: center;
        -webkit-justify-content: center;
    }

    @else if $p=="mid-block" {
        margin: 0 auto;
        display: block;
    }
}

@mixin input-placeholder {
    &.placeholder {
        @content;
    }

    &:-moz-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &::-webkit-input-placeholder {
        @content;
    }
}

@mixin hide-input-number {

    &[type="number"]::-webkit-inner-spin-button,
    &[type="number"]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        -ms-appearance: none;
        -o-appearance: none;
        appearance: none;
        margin: 0;
    }
}

@mixin hide-appearance {
    appearance: none;
}

@mixin borderArrow($p: down, $size: 5px, $color: #000) {
    width: 0;
    height: 0;

    @if ($p==left) {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
    }

    @else if ($p==right) {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
    }

    @else if ($p==down) {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
    }

    @else {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
    }
}

@mixin scrollbar {
    &::-webkit-scrollbar {
        width: 5px;
    }

    &::-webkit-scrollbar-thumb {
        background: rgba($color-pri, 0.7);
        border-radius: 4px;
    }
}

@mixin scroll-bar($size-w: 0.5rem, $size-h: 0.5rem, $br: #f1f1f1, $line: $color-pri) {
    padding-bottom: .5rem;

    &::-webkit-scrollbar {
        width: $size-w;
        height: $size-h;
    }

    /* Track */
    &::-webkit-scrollbar-track {
        background: $br;
    }

    /* Handle */
    &::-webkit-scrollbar-thumb {
        background: $line;
    }
}

@mixin pseudo($z: 0) {
    position: absolute;
    z-index: $z;
    content: "";
}

@mixin hover-global {
    @include hover {
        color: $color-pri;
    }
}

@mixin circle($circle: 100%) {
    width: $circle;
    height: $circle;
    border-radius: 100rem;
}

@mixin sqr($w: 100%, $h: 100%) {
    width: $w;
    height: $h;
}

@mixin reset-input {
    background-color: transparent;
    width: 100%;
    @include font-pri();
    border: none;
    outline: none;
}

@mixin flex-gap($gap: 1.2rem) {
    @include flex-wr;
    gap: $gap;
}

@mixin flex-gap-item($w: 100%, $gap: 1.2rem) {
    width: calc($w - $gap);
}

@mixin txt-ln {
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    text-fill-color: transparent;
}

@mixin item-shrink($size) {
    width: $size;
    height: $size;
    flex-shrink: 0;
    display: inline-block;
}

@mixin mb-list {
    @include max($mobile) {
        margin: 0 -0.4rem;
        margin-bottom: -0.8rem;
    }
}

@mixin mb-item {
    @include max($mobile) {
        padding: 0 0.4rem;
        margin-bottom: 0.8rem;
    }
}

@mixin br-under($color: $color-pri, $index: -2) {
    @include pseudo();
    @include full;
    background: $color;
    z-index: $index;
}

@mixin affter($color: $color-pri) {
    &::after {
        position: absolute;
        content: "";
        width: 0;
        height: 100%;
        top: 0;
        right: 0;
        background: $color;
        transition: all 0.4s ease;
        z-index: 1;
        pointer-events: none;
    }
}

@mixin hoverAffter {
    @include hover {
        &::after {
            left: 0;
            width: 100%;
        }
    }
}

@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @-moz-keyframes #{$animation-name} {
        @content;
    }

    @-ms-keyframes #{$animation-name} {
        @content;
    }

    @-o-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
    animation:#{$str};
    -webkit-animation:#{$str};
    -moz-animation:#{$str};
    -ms-animation:#{$str};
    -o-animation:#{$str};
}

@mixin transform($args) {
    transform: $args;
    -webkit-transform: $args;
    -moz-transform: $args;
    -ms-transform: $args;
    -o-transform: $args;
}

@mixin transform-origin($args) {
    transform-origin: $args;
    -webkit-transform-origin: $args;
    -moz-transform-origin: $args;
    -ms-transform-origin: $args;
    -o-transform-origin: $args;
}

@mixin transition-delay($args) {
    transition-delay: $args;
    -webkit-transition-delay: $args;
    -moz-transition-delay: $args;
    -ms-transition-delay: $args;
    -o-transition-delay: $args;
}

@mixin clip-path($string) {
    clip-path: polygon();
    -webkit-clip-path: $string;
    -moz-clip-path: $string;
    -ms-clip-path: $string;
    -o-clip-path: $string;
}



@mixin gap($gap, $col) {
    width: calc(100% / $col - ($gap - ($gap / $col)));
}

@mixin transChar ($dur, $delay, $type) {
    transition: $dur calc(var(--char-index) * $delay) $type;
}

@mixin mask($url) {
    mask-image: $url;
    -webkit-mask-image: $url;
    -moz-mask-image: $url;
    -ms-mask-image: $url;
    -o-mask-image: $url;
    mask-position: center;
    -webkit-mask-position: center;
    -webkit-mask-size: cover;
    -webkit-mask-repeat: no-repeat;
    -moz-mask-position: center;
    -moz-mask-size: cover;
    -moz-mask-repeat: no-repeat;
    -ms-mask-position: center;
    -ms-mask-size: cover;
    -ms-mask-repeat: no-repeat;
    -o-mask-position: center;
    -o-mask-size: cover;
    -o-mask-repeat: no-repeat;
}

@mixin mt($mt) {
    margin-top: $mt;

    @include max(800px) {
        margin-top: calc(#{$mt} / 2);
    }
}

@mixin ml($ml) {
    margin-left: $ml;

    @include max(800px) {
        margin-left: calc(#{$ml} / 2);
    }
}

@mixin mr($mr) {
    margin-right: $mr;

    @include max(800px) {
        margin-right: calc(#{$mr} / 2);
    }
}

@mixin mb($mb) {
    margin-bottom: $mb;

    @include max(800px) {
        margin-bottom: calc(#{$mb} / 2);
    }
}

@mixin pt($pt) {
    padding-top: $pt;

    @include max(800px) {
        padding-top: calc(#{$pt} / 2);
    }
}

@mixin pl($pl) {
    padding-left: $pl;

    @include max(800px) {
        padding-left: calc(#{$pl} / 2);
    }
}

@mixin pr($pr) {
    padding-right: $pr;

    @include max(800px) {
        padding-right: calc(#{$pr} / 2);
    }
}

@mixin pb($pb) {
    padding-bottom: $pb;

    @include max(800px) {
        padding-bottom: calc(#{$pb} / 2);
    }
}

@mixin bg() {
    position: relative;

    .bg {
        @include pseudo;
        @include full-second;
        right: 0;
        bottom: 0;
        z-index: 0;
        // opacity: .2;
        pointer-events: none;

        img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }
    }
}

@mixin autoX {
    margin-right: auto;
    margin-left: auto;
}

@mixin mx($size: 0) {
    margin-right: $size;
    margin-left: $size;
}